//public static void NeedsEmailSending(int taskId, string newName, string newContent, byte newState, int newWorkerId)

            return new List<SelectListItem>
            {
                new SelectListItem{Value = "0", Text = "Open"},
                new SelectListItem{Value = "1", Text = "Assigned"},
                new SelectListItem{Value = "2", Text = "Complete"}
            };

        private byte GetInterpretedState(string state)
        {
            switch (state)
            {
                case "Open":
                    return 0;
                case "Assigned":
                    return 1;
                case "Completed":
                    return 2;
            }
            throw new InvalidOperationException("State not recognized");
        }    
	
	    public IEnumerable<User> GetFreeWorkers()
        {
            return _unitOfWork.GetContext().User
                .Where(u => u.Task.Count == 0 && !u.IsManager).ToArray();
        }
	
	@Enum.GetName(typeof(TaskState), Model.State)

	
	//$("#popupBtn").click(function (event) {
    //    if ($("#logInForm").is(":visible")) {
    //        $("#logInForm").hide();
    //        $(document).off("click", hidePopupHandler);
    //    } else {
    //        $("#logInForm").show();
    //        event.stopPropagation();
    //        $(document).click(hidePopupHandler);
    //    }
    //});

(function() {
    $(document).ready(function() {
        $("#logInForm").hide();
        $("#popupLogInBtn").click(showPopupHandler);
    });

    function showPopupHandler(event) {
        $("#logInForm").show();
        event.stopPropagation();
        $(document).click(hidePopupHandler);

        $("#popupLogInBtn").off("click", showPopupHandler);
    }

    function hidePopupHandler(event) {

        if ($(event.target).closest("#logInFormPlaceholder").length === 0) {
            // hide
            $("#logInForm").hide();
            $(document).off("click", hidePopupHandler);

            $("#popupLogInBtn").click(showPopupHandler);
        }
    }
})();


public IEnumerable<Task> GetWorkerTasks(int workerId)
{
    return GetContext().Task.Where(t => t.WorkerId == workerId).ToArray();
}

public IEnumerable<Task> GetAllTasks()
{
    return GetContext().Task.ToArray();
}

function onLogOutSuccess(response) {
    $("#logOutForm").hide();

    $("#popupLogInBtn").show();
    $("#popupSignUpBtn").show();

    $("#popupLogInBtn").click(showPopupHandler);
    $("#popupSignUpBtn").click(showPopupHandler);

    $("#logInForm").find("input[type=text]").val("");
    $("#signUpForm").find("input[type=text]").val("");

    sendGetTasksRequest();
}

public AjaxOptions GetPagingOptions(int pageNumber)
{
    return GetAjaxOptions("pageContent", Url.Action(GetTasksAction, ControllerName, new {pageNumber}));
}

return (int)Math.Ceiling(((double)tasksCount / PageSize));

*.sample


download.ashx?fileId=345